buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'swarm.server'
    version =  '0.1.0'
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-test")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    compile("org.springframework.boot:spring-boot-devtools")

    compile("commons-dbcp:commons-dbcp")
    compile("com.google.code.gson:gson:2.4")
    
    testCompile('org.springframework.boot:spring-boot-starter-test')     
    testCompile("junit:junit")
    testCompile("com.jayway.jsonpath:json-path:2.0.0")
    
    runtime('org.postgresql:postgresql:9.3-1104-jdbc41')
    
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir 
}
stage.mustRunAfter(clean)