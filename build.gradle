buildscript {
	ext {
		springBootVersion = '2.1.4.RELEASE'
	}
	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'java'
	id 'eclipse'
	id 'com.gradle.build-scan' version '2.3'
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
}

buildScan {

    // always accept the terms of service
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'

    // always publish a build scan
    publishAlways()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-test")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    compile("org.springframework.boot:spring-boot-devtools")

    compile("commons-dbcp:commons-dbcp:1.2.2")
    compile("com.google.code.gson:gson:2.4")
    
    testCompile('org.springframework.boot:spring-boot-starter-test')     
    testCompile("junit:junit")
    testCompile("com.jayway.jsonpath:json-path:2.0.0")
    
    runtime('org.postgresql:postgresql:9.3-1104-jdbc41')
    
}